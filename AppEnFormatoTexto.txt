classdef ReproductorDeMusica < matlab.apps.AppBase

    % Properties that correspond to app components
    properties (Access = public)
        UIFigure                        matlab.ui.Figure
        TabGroup                        matlab.ui.container.TabGroup
        ReproductordemsicaTab           matlab.ui.container.Tab
        CargarcarpetaButton             matlab.ui.control.Button
        CargararchivosButton            matlab.ui.control.Button
        DetenerButton                   matlab.ui.control.Button
        Image                           matlab.ui.control.Image
        ControlesdeaudioButtonGroup     matlab.ui.container.ButtonGroup
        PlayButton                      matlab.ui.control.Button
        SiguienteButton                 matlab.ui.control.Button
        PausaButton                     matlab.ui.control.Button
        AnteriorButton                  matlab.ui.control.Button
        CancinactualEditFieldLabel      matlab.ui.control.Label
        Cancinactual                    matlab.ui.control.EditField
        InformacindelprocesoLabel_2     matlab.ui.control.Label
        mensajesclavemusica             matlab.ui.control.TextArea
        pruebasButton                   matlab.ui.control.Button
        ProgresoLabel                   matlab.ui.control.Label
        Slidermusica                    matlab.ui.control.Slider
        KnobLabel                       matlab.ui.control.Label
        ruedamusica                     matlab.ui.control.DiscreteKnob
        ExtraccindeaudioTab             matlab.ui.container.Tab
        Image_2                         matlab.ui.control.Image
        CargarvideoButton               matlab.ui.control.Button
        ExtraeraudioButton              matlab.ui.control.Button
        ElegirformatodesalidadeaudioPanel  matlab.ui.container.Panel
        FormatosdisponiblesButtonGroup  matlab.ui.container.ButtonGroup
        wavButton                       matlab.ui.control.RadioButton
        oggButton                       matlab.ui.control.RadioButton
        flacButton                      matlab.ui.control.RadioButton
        mp4Button                       matlab.ui.control.RadioButton
        m4aButton                       matlab.ui.control.RadioButton
        PlayaudioButton                 matlab.ui.control.Button
        NombredelacancionButtonGroup    matlab.ui.container.ButtonGroup
        DefectoButton                   matlab.ui.control.RadioButton
        ActivarNombre                   matlab.ui.control.RadioButton
        NombreArchivoTexto              matlab.ui.control.EditField
        InformacindelprocesoLabel       matlab.ui.control.Label
        mensajesclave                   matlab.ui.control.TextArea
        Instrucciones1Cargararrchivodevideo2ElegirformatodelaudioLabel  matlab.ui.control.Label
        EditFieldLabel                  matlab.ui.control.Label
        time                            matlab.ui.control.EditField
        ButtonGroup                     matlab.ui.container.ButtonGroup
        SegundosButton                  matlab.ui.control.RadioButton
        MinutosButton                   matlab.ui.control.RadioButton
        Button3                         matlab.ui.control.RadioButton
    end

    
    methods (Access = private)
        
        function i = func(app,duracion)
            i = 1;
                while i<=duracion

                    %Iniciamos el contador
                    tic;
                    if app.PausaButton(app,events)
%                         estadopause = 0;
                        disp('pausa clicleada')
                        app.PausaButton(app,event)                        
                     end  
                    while(1)
                        temp=toc;
                        %En cada segundo imprimimos el número


                        if temp>1
                           clc;
                           disp(i)
                           datetime('now')
                         
                           break;
                        end
                    end
                    i=i+1;
                end
                 disp('Funcion extra terminada')
                 SiguienteButtonPushed(app)
        end
    end


    % Callbacks that handle component events
    methods (Access = private)

        % Button pushed function: CargarcarpetaButton
        function CargarcarpetaButtonPushed(app, event)
            global canciones c player playestado dircanciones d y Fs

            try
                app.mensajesclavemusica.Value = ">> Cargando carpeta <<";
                d = uigetdir('C:\','Selecciar de folder de Audio');                                   
                app.UIFigure.Visible = 'off';              
                app.UIFigure.Visible = 'on'; 
                direc = dir(d);              
                T = struct2table(direc);             
                canciones = string(T.name);   
                point = char(46);
                disp(canciones)
                disp(d)
                if canciones(1) == char(46)                
                    canciones(1) = [];
                end             
                if canciones(1) == [point,point]               
                    canciones(1) = [];           
                end
          
                c=1;         
                playestado = 1;                        
                dircanciones = d+"\"+canciones;
                
                app.mensajesclavemusica.Value = ">> Carpeta " + ...
                    "lista >> " + d;
                
                [y,Fs] = audioread(dircanciones(c));            
                player = audioplayer(y,Fs);
                
                PlayButtonPushed(app, event)
            catch 
                playestado = []; 
%                 msgbox("Error" + ...
%                      " al cargar la carpeta," + ...
%                      " solo debe contener archivos de " + ...
%                      "audio.",'Alerta')
%                 app.mensajesclavemusica.Value = '';
%                 app.UIFigure.Visible = 'off';              
%                 app.UIFigure.Visible = 'on'; 
                 app.mensajesclavemusica.Value = ">> Error" + ...
                     "al cargar la carpeta," + ...
                     " solo debe contener archivos de audio.";
             end 

        end

        % Button pushed function: CargararchivosButton
        function CargararchivosButtonPushed(app, event)
            global dircanciones canciones d c playestado
        
            try 
                app.mensajesclavemusica.Value = ">> Cargando archivos <<";
                [canciones, d] = uigetfile({['*.wav;*.mp3;*.mp4;*.avi;' ...
                    '*.wmv;*.m4v;*.ogg;*.flac;' ...
                    '*.au;*.aiff;*.aif;*.aifc;' ...
                    '*.m4a;*.mp4;']},'Selección de Audio', ...
                     'MultiSelect', 'on'); 
                app.UIFigure.Visible = 'off';
                app.UIFigure.Visible = 'on';

                canciones = string(canciones);
                dircanciones = d+"\"+canciones;
                playestado = 1;
                c = 1;
                

                 nan = audioread(dircanciones(c));            
%                  player = audioplayer(y,Fs);

                PlayButtonPushed(app, event)
                                
            catch
                playestado = []; 
                app.mensajesclavemusica.Value = ["Error al cargar" + ...
                    "los archivos, solo deben ser de audio."
                     "" 
                    "Formatos disponibles: .wav .mp3 .mp4 " + ...
                    ".avi .wmv .m4v .ogg " + ...
                     ".flac .au .aiff, .aif .aifc .m4a, .mp4"];
            end
        end

        % Button pushed function: PlayButton
        function PlayButtonPushed(app, event)
            global canciones c player playestado y Fs dircanciones
            global duracion i estadopause estadopause2
            
            try 
                if isempty(playestado)
                    
                    
                fprintf("\n(vacio)El estado de play es(): %s y C es: %s\n",playestado,c)   
                app.mensajesclavemusica.Value = ">> Error, " + ...
                "para reproducir primero cargar los archivos " + ...
                "de audio.";
                
                elseif playestado == 1 
                    
                    
                fprintf("\n(uno)El estado de play es: %d y C es: %d\n",playestado,c)    
                    
                [y,Fs] = audioread(dircanciones(c));
                fprintf("\n(uno)El estado de play es: %s\n",dircanciones(c))    
                
                player = audioplayer(y,Fs);

                play(player);  
                
                app.Cancinactual.Value = canciones(c);
                app.mensajesclavemusica.Value = " ";
                fprintf("\n(uno)longitud de canciones: %d\n",length(canciones))    

                
                disp("inicio de mensajes")
                fprintf("\nCondicion1 tamaño canciones: %d\n",length(canciones))    
                
%                 if (length(canciones) > 1 && c < length(canciones))
%                 app.mensajesclavemusica.Value = "Siguiente canción" + ...
%                 "  >> " + canciones(c+1); 
%                 fprintf("\n(longituduno)Prueba mensajebox: %s\n",canciones(c+1))  
%                 end
%                 if c == length(canciones) 
%                 app.mensajesclavemusica.Value = "Siguiente canción" + ...
%                     "  >> " + canciones(c-1); 
%                 fprintf("\n(longituduno)Prueba mensajebox: %s\n",canciones(c+1))  
%                 end

                 disp("fin de mensajes")
                 disp("Inicio de duracion")
                duracion = (length(y(:,1))/(Fs));
                
                app.Slidermusica.Limits = [0 fix(duracion)]
                
                disp("Fin de duracion")
                disp("fin de mensajes")
              
                i = 1;
      
                disp("Pre while play")
                while i<=duracion
                    pause(1)
                    disp(i)
                    i=i+1;
                    app.Slidermusica.Value = i;

                    if estadopause2 == 1
                        break;
                    end
                end

                pause(9)
                
                %%%%%%%%%%%%%%%%%%%%%%%5
                
                 disp('Deberia iniciar la siguiente cancion')
                 SiguienteButtonPushed(app)

%                 SiguienteButtonPushed(app)
                
                %%%%%%%%%%%%%%%

                elseif playestado == 2
                fprintf("\n(pause)El estado de play es: %d y C es: %d\n",playestado,c)    
                    
                resume(player);
                playestado = 1;
                i = estadopause;
                estadopause2 = 0;
                disp("Pre while pause")
                while i<=duracion
                    pause(1)
                    disp(i)
                    i=i+1; 
                    app.Slidermusica.Value = i;
                    
                    if estadopause2 == 1
                        break;
                    end
                end

                pause(9)
                                
                %%%%%%%
                 disp('Deberia iniciar la siguiente cancion')
                 SiguienteButtonPushed(app)                    
                %%%%%%%%
                app.mensajesclavemusica.Value = [">> Reanudando:"
                ""
                ">> " + canciones(c)];
                app.Cancinactual.Value = canciones(c);
                end
    
            catch              
                
%                 app.mensajesclavemusica.Value = ">> Error " + ...
%                     "desconocido.";

            end
        end

        % Button pushed function: PausaButton
        function PausaButtonPushed(app, event)
            global player playestado estadopause estadopause2 i
            
            try
            estadopause = i-1;
            estadopause2 = 1;
            if isempty(playestado) 
             app.mensajesclavemusica.Value = ">> Error, " + ...
                "para pausar primero cargar los archivos " + ...
                "de audio.";   
            elseif playestado == 1
            pause(player)
            playestado = 2;
            app.mensajesclavemusica.Value =  ">> Reproductor de " + ...
                "música pausado. <<";
            end
            
            catch 
             app.mensajesclavemusica.Value =  ">> Error desconocido. <<";                          
            end

        end

        % Button pushed function: SiguienteButton
        function SiguienteButtonPushed(app, event)
            global canciones c dircanciones y Fs
             try
               c=c+1;
                                  
            if c>length(dircanciones) || c == 0                        
                c=1;       
            end
            fprintf("\n(next)El estado de C es: %d\n",c)    
          
             PlayButtonPushed(app)
                                 
             catch 
                disp('Error, carga la música')
             end

        end

        % Button pushed function: AnteriorButton
        function AnteriorButtonPushed(app, event)
            global canciones c player y Fs dircanciones
            try
               c=c-1;
            if c<=0               
                c=length(canciones);
            end
            disp(c)
                PlayButtonPushed(app)
            catch 
                disp('Error, carga la música')
            end

        end

        % Button pushed function: DetenerButton
        function DetenerButtonPushed(app, event)
            global player
            try            
            clear global; 
            app.mensajesclavemusica.Value = '';
            app.Cancinactual.Value = " ";
            stop(player);
            catch
            end

        end

        % Button pushed function: CargarvideoButton
        function CargarvideoButtonPushed(app, event)
            global dvideo videoname d c playerv y Fs estadocargav
        
            try 
                app.mensajesclave.Value = ['>> Cargando archivo,' ...
                    ' por favor esperar un momento.'];
                
                [videoname, d] = uigetfile({['*.wav;*.mp4;*.avi;' ...
                    '*.wmv;*.m4v;' ...
                    '*.m4a;*.mp4;*.mov']},'Selección de video'); 
                app.UIFigure.Visible = 'off';
                app.UIFigure.Visible = 'on';
                videoname = string(videoname);
                dvideo = d+videoname;
                c = 1;
               
                [y,Fs] = audioread(dvideo);           
                playerv = audioplayer(y,Fs);
               
                app.mensajesclave.Value = [">> Archivo listo " + ... 
                    "para extraer   >> " + '"' + videoname + '"' + " <<" 
                    '' 
                    '>> Siguiente: elegir nombre y extraer audio.'];
%                 '',
%                 '>> Siguiente: elegir nombre y extraer'];
                
                estadocargav = 1;

            catch
               
                app.mensajesclave.Value = ['>> Error al cargar ' ...
                    'archivo de video. ' ...
                    'Volver a intentar.'];

            end

        end

        % Button pushed function: ExtraeraudioButton
        function ExtraeraudioButtonPushed(app, event)
            global auextension y Fs extraccionaudio d videoname     
             global estadocargav estadoextracv
                
            if app.wavButton.Value == 1            
                    auextension = ".wav";
            elseif app.mp4Button.Value == 1
                    auextension = ".mp4";
            elseif app.m4aButton.Value == 1
                    auextension = ".m4a";
            elseif app.flacButton.Value == 1
                    auextension = ".flac";
            elseif app.oggButton.Value== 1
                    auextension = ".ogg";
            end
            
            try
                if app.ActivarNombre.Value == 1  
                    videoname =  string(app.NombreArchivoTexto.Value);       
                end                            
            
                extraccionaudio = d + videoname + auextension;                           
                audiowrite(extraccionaudio,y,Fs);            
                app.mensajesclave.Value = ['>> Dirección del audio:'
                ''
                extraccionaudio];                     
                estadoextracv = 1;        
            catch           
                if isempty(estadocargav)
                     app.mensajesclave.Value = ">> Error, " + ...
                         "antes de extraer el audio primero " + ...
                         "primer se debe cargar el " + ...
                         "archivo de video.";   
                else
                  app.mensajesclave.Value = ">> Error al guardar " + ...
                      "el audio.";
                 end
            end
%             app.mensajesclave.Value = ">> Error al guardar el audio," + ...
%                 " intentar de nuevo.";
        end

        % Button pushed function: PlayaudioButton
        function PlayaudioButtonPushed(app, event)
            global player extraccionaudio videoname auextension
            global estadocargav estadoextracv
            
            try
            [y,Fs] = audioread(extraccionaudio);           
            player = audioplayer(y,Fs);
            
            play(player);   
            app.mensajesclave.Value = ['>> Reproduciendo:' 
            ''
            '>> ' + videoname + auextension];

            catch
                 if isempty(estadocargav)
                     app.mensajesclave.Value = ">> Error, " + ...
                         "antes de reproducir el audio primero " + ...
                         "se debe cargar el " + ...
                         "archivo de video, y luego extraerlo.";                               
                 elseif isempty(estadoextracv)
                        app.mensajesclave.Value = ">> Error, " + ...
                         "antes de reproducir el audio " + ...
                         "es necesario extraer el audio."; 
                 else               
                     app.mensajesclave.Value = ">> Error " + ...
                         "desconocido al reproducir el audio.";
                end
            end
        end

        % Selection changed function: NombredelacancionButtonGroup
        function NombredelarchivoPanelSizeChanged(app, event)
            if app.ActivarNombre.Value == 1
                app.NombreArchivoTexto.Enable = 'on';
                app.NombreArchivoTexto.Value = '';

            else
                app.NombreArchivoTexto.Enable = 'off';
                app.NombreArchivoTexto.Value = ['Escribe el nombre ' ...
                    'del archivo'];         
            end
            
        end

        % Button pushed function: pruebasButton
        function pruebasButtonPushed(app, event)
         
              app.time.Value = string(datetime('now'));               

        end

        % Value changed function: time
        function timeValueChanged2(app, event)
%             value = app.time.Value;
            
             
            app.time.Value = datetime('now');               
            timeValueChanged2(app, event)

        end

        % Value changed function: Slidermusica
        function SlidermusicaValueChanged(app, event)
            value = app.Slidermusica.Value;
            
        end

        % Value changing function: Slidermusica
        function SlidermusicaValueChanging(app, event)
            global duracion 
% changingValue = event.Value;

            app.Slidermusica.Limits = [0 fix(duracion)]
        end
    end

    % Component initialization
    methods (Access = private)

        % Create UIFigure and components
        function createComponents(app)

            % Create UIFigure and hide until all components are created
            app.UIFigure = uifigure('Visible', 'off');
            app.UIFigure.Position = [100 100 720 497];
            app.UIFigure.Name = 'MATLAB App';

            % Create TabGroup
            app.TabGroup = uitabgroup(app.UIFigure);
            app.TabGroup.Position = [1 -2 720 500];

            % Create ReproductordemsicaTab
            app.ReproductordemsicaTab = uitab(app.TabGroup);
            app.ReproductordemsicaTab.Title = 'Reproductor de música';

            % Create CargarcarpetaButton
            app.CargarcarpetaButton = uibutton(app.ReproductordemsicaTab, 'push');
            app.CargarcarpetaButton.ButtonPushedFcn = createCallbackFcn(app, @CargarcarpetaButtonPushed, true);
            app.CargarcarpetaButton.Position = [111 413 110 31];
            app.CargarcarpetaButton.Text = 'Cargar carpeta';

            % Create CargararchivosButton
            app.CargararchivosButton = uibutton(app.ReproductordemsicaTab, 'push');
            app.CargararchivosButton.ButtonPushedFcn = createCallbackFcn(app, @CargararchivosButtonPushed, true);
            app.CargararchivosButton.Position = [251 414 110 30];
            app.CargararchivosButton.Text = 'Cargar archivos';

            % Create DetenerButton
            app.DetenerButton = uibutton(app.ReproductordemsicaTab, 'push');
            app.DetenerButton.ButtonPushedFcn = createCallbackFcn(app, @DetenerButtonPushed, true);
            app.DetenerButton.Position = [270 104 100 30];
            app.DetenerButton.Text = 'Detener';

            % Create Image
            app.Image = uiimage(app.ReproductordemsicaTab);
            app.Image.Position = [611 357 111 118];
            app.Image.ImageSource = 'rabbit.png';

            % Create ControlesdeaudioButtonGroup
            app.ControlesdeaudioButtonGroup = uibuttongroup(app.ReproductordemsicaTab);
            app.ControlesdeaudioButtonGroup.Title = 'Controles de audio';
            app.ControlesdeaudioButtonGroup.Position = [44 154 328 154];

            % Create PlayButton
            app.PlayButton = uibutton(app.ControlesdeaudioButtonGroup, 'push');
            app.PlayButton.ButtonPushedFcn = createCallbackFcn(app, @PlayButtonPushed, true);
            app.PlayButton.Icon = 'rabbit.png';
            app.PlayButton.Position = [121 76 79 36];
            app.PlayButton.Text = 'Play';

            % Create SiguienteButton
            app.SiguienteButton = uibutton(app.ControlesdeaudioButtonGroup, 'push');
            app.SiguienteButton.ButtonPushedFcn = createCallbackFcn(app, @SiguienteButtonPushed, true);
            app.SiguienteButton.Position = [199 44 84 29];
            app.SiguienteButton.Text = 'Siguiente';

            % Create PausaButton
            app.PausaButton = uibutton(app.ControlesdeaudioButtonGroup, 'push');
            app.PausaButton.ButtonPushedFcn = createCallbackFcn(app, @PausaButtonPushed, true);
            app.PausaButton.Position = [121 14 79 30];
            app.PausaButton.Text = 'Pausa';

            % Create AnteriorButton
            app.AnteriorButton = uibutton(app.ControlesdeaudioButtonGroup, 'push');
            app.AnteriorButton.ButtonPushedFcn = createCallbackFcn(app, @AnteriorButtonPushed, true);
            app.AnteriorButton.Position = [41 43 78 28];
            app.AnteriorButton.Text = 'Anterior';

            % Create CancinactualEditFieldLabel
            app.CancinactualEditFieldLabel = uilabel(app.ReproductordemsicaTab);
            app.CancinactualEditFieldLabel.HorizontalAlignment = 'right';
            app.CancinactualEditFieldLabel.Position = [11 362 91 22];
            app.CancinactualEditFieldLabel.Text = 'Canción actual :';

            % Create Cancinactual
            app.Cancinactual = uieditfield(app.ReproductordemsicaTab, 'text');
            app.Cancinactual.Editable = 'off';
            app.Cancinactual.Position = [106 362 459 22];

            % Create InformacindelprocesoLabel_2
            app.InformacindelprocesoLabel_2 = uilabel(app.ReproductordemsicaTab);
            app.InformacindelprocesoLabel_2.HorizontalAlignment = 'right';
            app.InformacindelprocesoLabel_2.Position = [33 78 147 26];
            app.InformacindelprocesoLabel_2.Text = 'Información del proceso:   ';

            % Create mensajesclavemusica
            app.mensajesclavemusica = uitextarea(app.ReproductordemsicaTab);
            app.mensajesclavemusica.Editable = 'off';
            app.mensajesclavemusica.Position = [31 19 659 60];

            % Create pruebasButton
            app.pruebasButton = uibutton(app.ReproductordemsicaTab, 'push');
            app.pruebasButton.ButtonPushedFcn = createCallbackFcn(app, @pruebasButtonPushed, true);
            app.pruebasButton.Position = [256 322 100 22];
            app.pruebasButton.Text = 'pruebas';

            % Create ProgresoLabel
            app.ProgresoLabel = uilabel(app.ReproductordemsicaTab);
            app.ProgresoLabel.HorizontalAlignment = 'right';
            app.ProgresoLabel.Enable = 'off';
            app.ProgresoLabel.Position = [416 148 54 22];
            app.ProgresoLabel.Text = 'Progreso';

            % Create Slidermusica
            app.Slidermusica = uislider(app.ReproductordemsicaTab);
            app.Slidermusica.ValueChangedFcn = createCallbackFcn(app, @SlidermusicaValueChanged, true);
            app.Slidermusica.ValueChangingFcn = createCallbackFcn(app, @SlidermusicaValueChanging, true);
            app.Slidermusica.Enable = 'off';
            app.Slidermusica.Position = [501 167 140 3];

            % Create KnobLabel
            app.KnobLabel = uilabel(app.ReproductordemsicaTab);
            app.KnobLabel.HorizontalAlignment = 'center';
            app.KnobLabel.Position = [554 207 34 22];
            app.KnobLabel.Text = 'Knob';

            % Create ruedamusica
            app.ruedamusica = uiknob(app.ReproductordemsicaTab, 'discrete');
            app.ruedamusica.Items = {'x1', 'x1.50', 'x1.75', 'x2'};
            app.ruedamusica.Position = [541 238 60 60];
            app.ruedamusica.Value = 'x1';

            % Create ExtraccindeaudioTab
            app.ExtraccindeaudioTab = uitab(app.TabGroup);
            app.ExtraccindeaudioTab.Title = 'Extracción de audio';
            app.ExtraccindeaudioTab.BackgroundColor = [0.9412 0.9412 0.9412];

            % Create Image_2
            app.Image_2 = uiimage(app.ExtraccindeaudioTab);
            app.Image_2.Position = [611 357 111 118];
            app.Image_2.ImageSource = 'rabbit.png';

            % Create CargarvideoButton
            app.CargarvideoButton = uibutton(app.ExtraccindeaudioTab, 'push');
            app.CargarvideoButton.ButtonPushedFcn = createCallbackFcn(app, @CargarvideoButtonPushed, true);
            app.CargarvideoButton.Icon = 'rabbit.png';
            app.CargarvideoButton.Position = [32 416 125 41];
            app.CargarvideoButton.Text = 'Cargar video';

            % Create ExtraeraudioButton
            app.ExtraeraudioButton = uibutton(app.ExtraccindeaudioTab, 'push');
            app.ExtraeraudioButton.ButtonPushedFcn = createCallbackFcn(app, @ExtraeraudioButtonPushed, true);
            app.ExtraeraudioButton.Icon = 'rabbit.png';
            app.ExtraeraudioButton.Position = [31 118 130 36];
            app.ExtraeraudioButton.Text = 'Extraer audio';

            % Create ElegirformatodesalidadeaudioPanel
            app.ElegirformatodesalidadeaudioPanel = uipanel(app.ExtraccindeaudioTab);
            app.ElegirformatodesalidadeaudioPanel.TitlePosition = 'centertop';
            app.ElegirformatodesalidadeaudioPanel.Title = 'Elegir formato de salida de audio';
            app.ElegirformatodesalidadeaudioPanel.Position = [32 251 239 153];

            % Create FormatosdisponiblesButtonGroup
            app.FormatosdisponiblesButtonGroup = uibuttongroup(app.ElegirformatodesalidadeaudioPanel);
            app.FormatosdisponiblesButtonGroup.BorderType = 'none';
            app.FormatosdisponiblesButtonGroup.TitlePosition = 'centertop';
            app.FormatosdisponiblesButtonGroup.Title = 'Formatos disponibles';
            app.FormatosdisponiblesButtonGroup.Position = [40 1 159 129];

            % Create wavButton
            app.wavButton = uiradiobutton(app.FormatosdisponiblesButtonGroup);
            app.wavButton.Tag = 'wav';
            app.wavButton.Text = '.wav';
            app.wavButton.Position = [21 79 58 22];
            app.wavButton.Value = true;

            % Create oggButton
            app.oggButton = uiradiobutton(app.FormatosdisponiblesButtonGroup);
            app.oggButton.Tag = 'ogg';
            app.oggButton.Text = '.ogg';
            app.oggButton.Position = [101 29 44 22];

            % Create flacButton
            app.flacButton = uiradiobutton(app.FormatosdisponiblesButtonGroup);
            app.flacButton.Tag = 'flac';
            app.flacButton.Text = '.flac';
            app.flacButton.Position = [101 69 44 22];

            % Create mp4Button
            app.mp4Button = uiradiobutton(app.FormatosdisponiblesButtonGroup);
            app.mp4Button.Tag = 'mp4';
            app.mp4Button.Text = '.mp4';
            app.mp4Button.Position = [21 49 58 22];

            % Create m4aButton
            app.m4aButton = uiradiobutton(app.FormatosdisponiblesButtonGroup);
            app.m4aButton.Tag = 'm4a';
            app.m4aButton.Text = '.m4a';
            app.m4aButton.Position = [21 19 47 22];

            % Create PlayaudioButton
            app.PlayaudioButton = uibutton(app.ExtraccindeaudioTab, 'push');
            app.PlayaudioButton.ButtonPushedFcn = createCallbackFcn(app, @PlayaudioButtonPushed, true);
            app.PlayaudioButton.Icon = 'rabbit.png';
            app.PlayaudioButton.Position = [541 99 138 35];
            app.PlayaudioButton.Text = 'Play audio';

            % Create NombredelacancionButtonGroup
            app.NombredelacancionButtonGroup = uibuttongroup(app.ExtraccindeaudioTab);
            app.NombredelacancionButtonGroup.SelectionChangedFcn = createCallbackFcn(app, @NombredelarchivoPanelSizeChanged, true);
            app.NombredelacancionButtonGroup.BorderType = 'none';
            app.NombredelacancionButtonGroup.Title = 'Nombre de la cancion';
            app.NombredelacancionButtonGroup.Position = [32 156 457 88];

            % Create DefectoButton
            app.DefectoButton = uiradiobutton(app.NombredelacancionButtonGroup);
            app.DefectoButton.Text = 'Defecto';
            app.DefectoButton.Position = [5 38 63 22];
            app.DefectoButton.Value = true;

            % Create ActivarNombre
            app.ActivarNombre = uiradiobutton(app.NombredelacancionButtonGroup);
            app.ActivarNombre.Text = 'Personalizado:';
            app.ActivarNombre.Position = [5 13 101 22];

            % Create NombreArchivoTexto
            app.NombreArchivoTexto = uieditfield(app.NombredelacancionButtonGroup, 'text');
            app.NombreArchivoTexto.Enable = 'off';
            app.NombreArchivoTexto.Position = [108 14 342 21];
            app.NombreArchivoTexto.Value = 'Escribe el nombre de la canción';

            % Create InformacindelprocesoLabel
            app.InformacindelprocesoLabel = uilabel(app.ExtraccindeaudioTab);
            app.InformacindelprocesoLabel.HorizontalAlignment = 'right';
            app.InformacindelprocesoLabel.Position = [33 79 147 26];
            app.InformacindelprocesoLabel.Text = 'Información del proceso:   ';

            % Create mensajesclave
            app.mensajesclave = uitextarea(app.ExtraccindeaudioTab);
            app.mensajesclave.Editable = 'off';
            app.mensajesclave.Position = [31 20 659 60];

            % Create Instrucciones1Cargararrchivodevideo2ElegirformatodelaudioLabel
            app.Instrucciones1Cargararrchivodevideo2ElegirformatodelaudioLabel = uilabel(app.ExtraccindeaudioTab);
            app.Instrucciones1Cargararrchivodevideo2ElegirformatodelaudioLabel.Position = [501 154 199 190];
            app.Instrucciones1Cargararrchivodevideo2ElegirformatodelaudioLabel.Text = {'Instrucciones:'; ''; '      1) Cargar archivo de video'; ''; '      2) Elegir formato del audio'; ''; '      3) El nombre por defecto es '; '      el nombre del archivo original'; ''; '      4) Extraer audio'; ''; '      5) Se puede reproducir el audio '; '      una vez garcado el video, y usar'; '      los controles del reproductor'};

            % Create EditFieldLabel
            app.EditFieldLabel = uilabel(app.ExtraccindeaudioTab);
            app.EditFieldLabel.HorizontalAlignment = 'right';
            app.EditFieldLabel.Position = [311 270 55 22];
            app.EditFieldLabel.Text = 'Edit Field';

            % Create time
            app.time = uieditfield(app.ExtraccindeaudioTab, 'text');
            app.time.ValueChangedFcn = createCallbackFcn(app, @timeValueChanged2, true);
            app.time.Editable = 'off';
            app.time.Position = [381 270 100 22];

            % Create ButtonGroup
            app.ButtonGroup = uibuttongroup(app.ExtraccindeaudioTab);
            app.ButtonGroup.Title = 'Button Group';
            app.ButtonGroup.Position = [311 330 170 106];

            % Create SegundosButton
            app.SegundosButton = uiradiobutton(app.ButtonGroup);
            app.SegundosButton.Text = 'Segundos';
            app.SegundosButton.Position = [11 60 76 22];
            app.SegundosButton.Value = true;

            % Create MinutosButton
            app.MinutosButton = uiradiobutton(app.ButtonGroup);
            app.MinutosButton.Text = 'Minutos';
            app.MinutosButton.Position = [97 60 65 22];

            % Create Button3
            app.Button3 = uiradiobutton(app.ButtonGroup);
            app.Button3.Text = 'Button3';
            app.Button3.Position = [41 27 65 22];

            % Show the figure after all components are created
            app.UIFigure.Visible = 'on';
        end
    end

    % App creation and deletion
    methods (Access = public)

        % Construct app
        function app = ReproductorDeMusica

            % Create UIFigure and components
            createComponents(app)

            % Register the app with App Designer
            registerApp(app, app.UIFigure)

            if nargout == 0
                clear app
            end
        end

        % Code that executes before app deletion
        function delete(app)

            % Delete UIFigure when app is deleted
            delete(app.UIFigure)
        end
    end
end