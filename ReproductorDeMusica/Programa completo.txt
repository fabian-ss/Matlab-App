classdef ReproductorDeMusica < matlab.apps.AppBase

    % Properties that correspond to app components
    properties (Access = public)
        UIFigure                     matlab.ui.Figure
        Image                        matlab.ui.control.Image
        DetenerButton                matlab.ui.control.Button
        ControlesdeaudioButtonGroup  matlab.ui.container.ButtonGroup
        PlayButton                   matlab.ui.control.Button
        PausaButton                  matlab.ui.control.Button
        SiguienteButton              matlab.ui.control.Button
        AnteriorButton               matlab.ui.control.Button
        CargararchivosButton         matlab.ui.control.Button
        CargarcarpetaButton          matlab.ui.control.Button
    end

    % Callbacks that handle component events
    methods (Access = private)

        % Button pushed function: PlayButton
        function PlayButtonPushed(app, event)
            global canciones c player playestado
         
            try
                clc,
            if playestado == 1                                          
                play(player);   
                fprintf("\n\t >> Reproduciendo: %s <<\n\n",canciones(c))
            else
                resume(player);
                fprintf("\n\t >> Reanudando canción: %s <<\n\n",canciones(c))
                playestado = 1;
            end
    
            catch
            disp('Error, carga la música')
            end

        end

        % Selection changed function: ControlesdeaudioButtonGroup
        function ControlesdeaudioButtonGroupSelectionChanged(app, event)
             global c  playestado 

             c=1;
             playestado = 1;             
        end

        % Button pushed function: PausaButton
        function PausaButtonPushed(app, event)
            global player playestado
            try
            clc,
            pause(player)
            playestado = 0;
            clc
            fprintf("\n\t >> Reproductor de música pausado.<<\n\n")  
            catch 
            disp('Error, carga la música')   
            end

        end

        % Button pushed function: SiguienteButton
        function SiguienteButtonPushed(app, event)
            global canciones c player y Fs dircanciones
             try
               c=c+1;
                                  
            if c>length(dircanciones) || c == 0                        
                c=1;       
            end
                clc,
                [y,Fs] = audioread(dircanciones(c));
                player = audioplayer(y,Fs);
                play(player);   
                fprintf("\n\t >> Reproduciendo: %s <<\n\n",canciones(c))
                 
             catch 
                disp('Error, carga la música')
             end

        end

        % Button pushed function: DetenerButton
        function DetenerButtonPushed(app, event)
            global player
            try
            stop(player),
            clc,
            clear,
            disp(">> Reproductor de audio detenido <<")
                
            catch
                disp('Error, carga la música')
            end

        end

        % Button pushed function: AnteriorButton
        function AnteriorButtonPushed(app, event)
            global canciones c player y Fs dircanciones
            try
               c=c-1;
            if c<=0               
                c=length(canciones);
            end
                clc,
                [y,Fs] = audioread(dircanciones(c));
                player = audioplayer(y,Fs);
                play(player);   
                fprintf("\n\t >> Reproduciendo: %s <<\n\n",canciones(c))
            catch 
                disp('Error, carga la música')
            end

        end

        % Image clicked function: Image
        function ImageClicked(app, event)

        end

        % Button pushed function: CargarcarpetaButton
        function CargarcarpetaButtonPushed(app, event)
             global canciones c player playestado dircanciones d y Fs

            try
            d = uigetdir('C:\');
            direc = dir(d);
            T = struct2table(direc);
            canciones = string(T.name);
            canciones(1)=[]; 
            canciones(1)=[];
            c=1;
            playestado = 1;
            
            dircanciones = d+"\"+canciones;
            clc
            fprintf("\n\t >> cargando carpeta: %s <<\n\n",d)
            [y,Fs] = audioread(dircanciones(c));
            player = audioplayer(y,Fs);
            catch 
               clc
               disp("Error al cargar la carpeta")
            end 
            stop(player)
        end

        % Button pushed function: CargararchivosButton
        function CargararchivosButtonPushed(app, event)
               global dircanciones player canciones d c
        
            try 
                stop(player)
                
                [canciones, d] = uigetfile({['*.wav;*.mp3;*.mp4;*.avi;' ...
                    '*.wmv;*.m4v;*.ogg;*.flac;' ...
                    '*.au;*.aiff;*.aif;*.aifc;' ...
                    '*.m4a;*.mp4;']},'Selección de Audio', ...
                     'MultiSelect', 'on');     
                canciones = string(canciones);
                dircanciones = d+"\"+canciones;
                c = 1;
                            
                fprintf("\n\t >> Archivos listos, presionar" + ...
                    "  Reproducir para iniciar: %s <<\n\n",c);           
                [y,Fs] = audioread(dircanciones(c));           
                player = audioplayer(y,Fs);
                
                
            catch
                clc
                 disp("Error al cargar archivos de audio")
                 disp("Los formatos disponibles son: " + ...
                     ".wav .mp3 .mp4 .avi .wmv .m4v .ogg " + ...
                     ".flac .au .aiff, .aif .aifc .m4a, .mp4")
            end
                stop(player)
%                 PlayButtonPushed(app, event)
        end
    end

    % Component initialization
    methods (Access = private)

        % Create UIFigure and components
        function createComponents(app)

            % Create UIFigure and hide until all components are created
            app.UIFigure = uifigure('Visible', 'off');
            app.UIFigure.Position = [100 100 523 290];
            app.UIFigure.Name = 'MATLAB App';

            % Create Image
            app.Image = uiimage(app.UIFigure);
            app.Image.ImageClickedFcn = createCallbackFcn(app, @ImageClicked, true);
            app.Image.Position = [395 150 111 118];
            app.Image.ImageSource = 'rabbit.png';

            % Create DetenerButton
            app.DetenerButton = uibutton(app.UIFigure, 'push');
            app.DetenerButton.ButtonPushedFcn = createCallbackFcn(app, @DetenerButtonPushed, true);
            app.DetenerButton.Position = [251 225 100 22];
            app.DetenerButton.Text = 'Detener';

            % Create ControlesdeaudioButtonGroup
            app.ControlesdeaudioButtonGroup = uibuttongroup(app.UIFigure);
            app.ControlesdeaudioButtonGroup.SelectionChangedFcn = createCallbackFcn(app, @ControlesdeaudioButtonGroupSelectionChanged, true);
            app.ControlesdeaudioButtonGroup.Title = 'Controles de audio';
            app.ControlesdeaudioButtonGroup.Position = [43 36 328 154];

            % Create PlayButton
            app.PlayButton = uibutton(app.ControlesdeaudioButtonGroup, 'push');
            app.PlayButton.ButtonPushedFcn = createCallbackFcn(app, @PlayButtonPushed, true);
            app.PlayButton.Position = [127 77 74 22];
            app.PlayButton.Text = 'Play';

            % Create PausaButton
            app.PausaButton = uibutton(app.ControlesdeaudioButtonGroup, 'push');
            app.PausaButton.ButtonPushedFcn = createCallbackFcn(app, @PausaButtonPushed, true);
            app.PausaButton.Position = [127 35 73 22];
            app.PausaButton.Text = 'Pausa';

            % Create SiguienteButton
            app.SiguienteButton = uibutton(app.ControlesdeaudioButtonGroup, 'push');
            app.SiguienteButton.ButtonPushedFcn = createCallbackFcn(app, @SiguienteButtonPushed, true);
            app.SiguienteButton.Position = [221 56 74 22];
            app.SiguienteButton.Text = 'Siguiente';

            % Create AnteriorButton
            app.AnteriorButton = uibutton(app.ControlesdeaudioButtonGroup, 'push');
            app.AnteriorButton.ButtonPushedFcn = createCallbackFcn(app, @AnteriorButtonPushed, true);
            app.AnteriorButton.Position = [26 56 74 22];
            app.AnteriorButton.Text = 'Anterior';

            % Create CargararchivosButton
            app.CargararchivosButton = uibutton(app.UIFigure, 'push');
            app.CargararchivosButton.ButtonPushedFcn = createCallbackFcn(app, @CargararchivosButtonPushed, true);
            app.CargararchivosButton.Position = [43 208 100 22];
            app.CargararchivosButton.Text = 'Cargar archivos';

            % Create CargarcarpetaButton
            app.CargarcarpetaButton = uibutton(app.UIFigure, 'push');
            app.CargarcarpetaButton.ButtonPushedFcn = createCallbackFcn(app, @CargarcarpetaButtonPushed, true);
            app.CargarcarpetaButton.Position = [43 246 100 22];
            app.CargarcarpetaButton.Text = 'Cargar carpeta';

            % Show the figure after all components are created
            app.UIFigure.Visible = 'on';
        end
    end

    % App creation and deletion
    methods (Access = public)

        % Construct app
        function app = ReproductorDeMusica

            % Create UIFigure and components
            createComponents(app)

            % Register the app with App Designer
            registerApp(app, app.UIFigure)

            if nargout == 0
                clear app
            end
        end

        % Code that executes before app deletion
        function delete(app)

            % Delete UIFigure when app is deleted
            delete(app.UIFigure)
        end
    end
end